<?xml version="1.0" encoding="utf-8"?>
<package>
  <metadata>
    <id>Covarsky</id>
    <version>$version$</version>
    <description>Covarsky is a tool that provides co(ntra)variance in types written in a .NET language that does not support them, like F#.</description>
    <authors>Theodore Tsirpanis</authors>
    <copyright>Copyright Â© 2020 Theodore Tsirpanis. Licensed under the MIT License.
Contains some code from Fody, which is licensed under the MIT License as well.</copyright>
    <developmentDependency>true</developmentDependency>
    <releaseNotes>Assemblies that are processed by Covarsky are marked with an internal class
named ProcessedByCovarsky, and are not touched again on incremental builds.
    
Add support for strong-named assemblies. The code for this feature was copied from Fody.</releaseNotes>
    <projectUrl>https://github.com/teo-tsirpanis/Covarsky</projectUrl>
    <license type="expression">MIT</license>
    <tags>variance covariance contravariance msbuild fsharp</tags>
    <repository type="git" url="https://github.com/teo-tsirpanis/Covarsky.git" />
  </metadata>
  <files>
    <file src="tools\**\*.*" target="tools" />
    <file src="Covarsky.props" target="build" />
    <file src="Covarsky.targets" target="build" />
  </files>
</package>